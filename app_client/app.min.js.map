{"version":3,"sources":["main.js","home/home.controller.js","profile/profile.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","loginCtrl","$scope","credentials","email","password","onSubmit","login","err","message","then","registerCtrl","name","register","op","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();","(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();","(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();","(function() {\n\n  angular\n    .module('meanApp')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$scope', '$location', 'authentication'];\n\n  function loginCtrl($scope, $location, authentication) {\n    var vm = this;\n\n    if (authentication.isLoggedIn()) {\n      $location.path('profile');\n      return;\n    }\n\n    vm.credentials = {\n      email: \"\",\n      password: \"\"\n    };\n\n    $scope.error = \"\";\n\n    vm.onSubmit = function() {\n      authentication\n        .login(vm.credentials)\n        .error(function(err) {\n          $scope.error = err.message;\n        })\n        .then(function() {\n          $scope.error = \"\";\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function() {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$scope', '$location', 'authentication'];\n\n  function registerCtrl($scope, $location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    $scope.error = \"\";\n\n    vm.onSubmit = function() {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err) {\n          $scope.error = \"Duplicate email \" + err.op.email;\n        })\n        .then(function() {\n          $scope.error = \"\";\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();","(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();","(function() {\n\n    angular\n        .module('meanApp')\n        .controller('navigationCtrl', navigationCtrl);\n\n    navigationCtrl.$inject = ['$scope', '$location', 'authentication'];\n\n    function navigationCtrl($scope, $location, authentication) {\n        var vm = this;\n\n        vm.isLoggedIn = authentication.isLoggedIn();\n        vm.currentUser = authentication.currentUser();\n\n        $scope.logout = function() {\n            authentication.logout();\n            vm.isLoggedIn = authentication.isLoggedIn();\n            vm.currentUser = authentication.currentUser();\n        };\n    }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}